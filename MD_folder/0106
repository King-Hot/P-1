# 0106 학습내역
-------------
## Study About Proj

 - What is SPA?
SPA는 Single Page Application의 약자이다. 내가 이해 한 것이 맞다면 기존 웹 페이지는 클라이언트의 요청 때마다 서버에서 새로운 리소스와 데이터를 가져와 갱신했다. SPA 방식은 브라우저에 최초에 한번 페이지 전체를 로드하고, 이후부터는 특정 부분만 *Ajax*를 통해 데이터를 바인딩하는 방식이다. SPA에서 라우팅은 서버로 페이지 전체를 요청하지 않고, HTML 5의 *history api*와 *hash history*를 이용하여 구현할 수 있다.


 - What is Ajax?
Ajax란 Asynchronous JavaScript and XML의 약자입니다. Ajax는 빠르게 동작하는 동적인 웹 페이지를 만들기 위한 개발 기법의 하나이다.
Ajax는 웹 페이지 전체를 다시 로딩하지 않고도, 웹 페이지의 일부분만을 갱신할 수 있다.

- What is history api?
브라우저에서 페이지 로딩을 하면, 세션 히스토리라는 것을 갖는다. 세션 히스토리는 페이지를 이동할 때마다 쌓이게 되며, 이를 통해 뒤로가기 시 이전 페이지로 가거나 뒤로 간 이후 다시 앞으로 가는 등의 이동이 가능하다.
-> 잘 이해가 가지 않음.


- What is DOM?
브라우저 객체 모델(BOM: Browser Object Model). 이 브라우저 객체 모델(BOM)을 이용해서 Browser와 관련된 기능들을 구성한다. DOM은 이 BOM  중의 하나이다. 브라우저 객체 모델(BOM)의 최상위 객체는 window라는 객체입니다. DOM은 이 window 객체의 하위 객체이다. 
DOM은 Documnet Object Model의 약자이다. 문서 객체란 <html>이나 <body> 같은 html문서의 태그들을 JavaScript가 이용할 수 있는 객체(object)로 만들면 그것을 문서 객체라고 한다. 조금 더 명확하게 표현하자면 브라우저가 HTML을 인식하는 방식을 좁은 의미로 본다면 document 객체와 관련된 객체의 집합이다.
    즉 DOM은 웹 브라우저가 HTML을 인식하는 방식 또는 문서 객체와 관련된 객체의 집합이라고 표현 할 수 있다.
    
- What is Rendering?
    
-------------
## IDEA
SPA, history api 등등 지금까지 눈으로 본 것만을 종합해 보았을 때 기본적으로 html, css를 세팅해 둔 뒤 원하고자 하는 기능을 클릭할 때마다 해당하는 기능들을 화면에 출력해주고 이외의 기능들은 class name에 .hidden을 삽입,삭제 통해서 감추는 방식으로 JS를 구현하면 되지 않을까? 하는 생각이 듦.
이때 뒤로가기 앞으로 가기 등등 기능은 history api로 구현하는 것이...맞나..?
    
